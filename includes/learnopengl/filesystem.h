//
// Created by JunhaoW on 2020/10/29.
//

#ifndef LEARNOPENGL_INCLUDES_LEARNOPENGL_FILESYSTEM_H_
#define LEARNOPENGL_INCLUDES_LEARNOPENGL_FILESYSTEM_H_

#include <string>
#include <cstdlib>
#include <root_direcotry.h>  // This is a configuration file generated by CMake.

class FileSystem
{
private:
    typedef std::string (* Builder)(const std::string& path);

public:
    static std::string getPath(const std::string& path)
    {
        static std::string (* pathBuilder)(std::string const&) = getPathBuilder();
        return (*pathBuilder)(path);
    }

private:
    static std::string const& getRoot()
    {
        static const char* envRoot = getenv("LOGL_ROOT_PATH");
        static const char* givenRoot = (envRoot != nullptr ? envRoot : logl_root);
        static std::string root = (givenRoot != nullptr ? givenRoot : "");
        return root;
    }

    static Builder getPathBuilder()
    {
        if (getRoot() != "")
            return &FileSystem::getPathRelativeRoot;
        else
            return &FileSystem::getPathRelativeBinary;
    }

    static std::string getPathRelativeRoot(const std::string& path)
    {
        return getRoot() + std::string("/") + path;
    }

    static std::string getPathRelativeBinary(const std::string& path)
    {
        return "../../../" + path;
    }
};

#endif //LEARNOPENGL_INCLUDES_LEARNOPENGL_FILESYSTEM_H_
